<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStageSelectMarker</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
image_speed = 1/8;

menuChoice = 5; // Center
menuSelectX = 0;
menuSelectY = 0;

selectedStage = "NOTHING HERE YET"

finalStageLocked = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = keyboard_check_released(vk_left);
kRight = keyboard_check_released(vk_right);
kUp = keyboard_check_released(vk_up);
kDown = keyboard_check_released(vk_down);

kConfirm = keyboard_check_released(ord("X"));

kLeftGP = gamepad_button_check_released(0,gp_padl)
kRightGP = gamepad_button_check_released(0,gp_padr)
kUpGP = gamepad_button_check_released(0,gp_padu)
kDownGP = gamepad_button_check_released(0,gp_padd)

kConfirmGP = gamepad_button_check_released(0,gp_face1)

if gamepad_is_connected(0)
{
    if kLeftGP kLeft = 1;
    if kRightGP kRight = 1;
    if kUpGP kUp = 1;
    if kDownGP kDown = 1;
    if kConfirmGP kConfirm = 1;
}

if kLeft | kRight | kUp | kDown audio_play_sound(sndMenuNavigate, 9, false);
if kLeft
{
    if x == 128 { x = 64; }
    else if x == 64 { x = 192; }
    else if x == 192 { x = 128; }
}

if kRight
{
    if x == 128 { x = 192; }
    else if x == 192 { x = 64; }
    else if x == 64 { x = 128; }
}

if kUp
{
    if y == 112 { y = 48; }
    else if y == 48 { y = 176; }
    else if y == 176 { y = 112; }
}

if kDown
{
    if y == 112 { y = 176; }
    else if y == 176 { y = 48; }
    else if y == 48 { y = 112; }
}

// Stage select grid row
/*
[1] [2] [3]
[4] [5] [6]
[7] [8] [9]
*/

// Stage Select positions
if x == 128 and y == 112 // 5
{
    if finalStageLocked == true selectedStage = "STAGE SELECT"
    else selectedStage = "OCCUPIED FORTRESS"
    
    global.stageSelection = 5;
}
else if x == 128 and y == 48 // 2
{
    selectedStage = "PROGRESS 2"
    global.stageSelection = 2;
}
else if x == 128 and y == 176 // 8
{
    selectedStage = "PROGRESS 8"
    global.stageSelection = 8;
}

else if x == 64 and y == 112 // 4
{
    selectedStage = "CODE WOMAN"
    global.stageSelection = 4;
    
}
else if x == 192 and y == 112 // 6
{
    selectedStage = "POISON WOMAN"
    global.stageSelection = 6;
}
else if x == 192 and y == 176 // 9
{
    selectedStage = "SURGE WOMAN"
    global.stageSelection = 9;
}
else if x == 64 and y == 176 // 7
{
    selectedStage = "PROGRESS 7"
    global.stageSelection = 7;
}
else if x == 64 and y == 48 // 1
{
    selectedStage = "TESTING CHAMBER DEMO"
    global.stageSelection = 1;
}
else if x == 192 and y == 48 // 3
{
    selectedStage = "PROGRESS 3"
    global.stageSelection = 3;
}

else
{
    selectedStage = "???"
}

if kConfirm
{
    if global.stageSelection == 1 room_goto(rmTestingChamber);
    else audio_play_sound(sndDeny,9,false);
}

if keyboard_check_released(vk_enter)
{
    audio_stop_all();
    room_goto(rmMainMenu);
}

if keyboard_check_released(vk_escape) game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprStageSelectMarker, image_index, x, y)

draw_set_font(global.Font)
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_center)

draw_text((view_xview[0]+128), (view_yview[0]+4), selectedStage);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
