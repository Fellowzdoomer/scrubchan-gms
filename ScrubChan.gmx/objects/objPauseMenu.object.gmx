<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible = false;
global.inMenu = false;
global.menuChoice = 1;
global.subMenuChoice = 1;

currentArea = "main" // either "weapon", "item", or "settings"
currentSide = "left"
frameWait = 0;

drawArrow = false;
arrowX = 0;
arrowY = 0;
arrowTimer = 0;
arrowDir = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.inMenu
{
    kConfirm = keyboard_check_released(ord("X"));
    kGoBack = keyboard_check_released(ord("Z"));
    kUp = keyboard_check_released(vk_up);
    kDown = keyboard_check_released(vk_down);
    kLeft = keyboard_check_released(vk_left);
    kRight = keyboard_check_released(vk_right);
    
    kConfirmGP = gamepad_button_check_released(0,gp_face1)
    kGoBackGP = gamepad_button_check_released(0,gp_face2)
    kUpGP = gamepad_button_check_released(0,gp_padu)
    kDownGP = gamepad_button_check_released(0,gp_padd)
    kLeftGP = gamepad_button_check_released(0,gp_padl)
    kRightGP = gamepad_button_check_released(0,gp_padr)
    
    if gamepad_is_connected(0)
    {
        if kConfirmGP kConfirm = 1;
        if kGoBackGP kGoBack = 1;
        if kUpGP kUp = 1;
        if kDownGP kDown = 1;
        if kLeftGP kLeft = 1;
        if kRightGP kRight = 1;
    }
    
    if kUp || kDown || kLeft || kRight
    {
        audio_play_sound(sndMenuNavigate, 9, false);
    }
    
    if kDown 
    {
        if currentSide == "left"
        {
            if currentArea == "main"
            {
                if global.menuChoice == 3 global.menuChoice = 1
                else global.menuChoice += 1;
            }
            else
            {
                if global.menuChoice == 9 global.menuChoice = 1
                else global.menuChoice += 1;
            }
        }
        
        show_debug_message(string(global.menuChoice))
    }
    if kUp
    {
        if currentSide == "left"
        {
            if currentArea == "main"
            {
                if global.menuChoice == 1 global.menuChoice = 3
                else global.menuChoice -= 1;
            }
            else
            {
                if global.menuChoice == 1 global.menuChoice = 9
                else global.menuChoice -= 1;
            }
        }
        show_debug_message(string(global.menuChoice))
    }
    
    // Left/Right
    
    if kLeft || kRight
    {
        if currentSide == "left" {
            currentSide = "right"
            drawArrow = true;
        }
        else if currentSide == "right" {
            currentSide = "left"
            drawArrow = false;
        }
    }
    
    // kConfirm
    if kConfirm
    {
        audio_play_sound(sndMenuToggle,9,false);
        if currentSide == "left"
        {
            if currentArea == "main"
            {
                if global.menuChoice == 1
                {
                    currentArea = "weapons"
                }
                else if global.menuChoice == 2
                {
                    currentArea = "utility"
                }
                else if global.menuChoice == 3
                {
                    currentArea = "settings"
                }
                else if global.menuChoice == 4
                {
                    audio_stop_all();
                    room_goto(arbitraryCode);
                }
            }
            else
            {
                if global.menuChoice == 1 or global.menuChoice == 2 or global.menuChoice == 3
                {
                    currentArea = "main"
                }
            }
        }
    }
    
    if kGoBack
    {
        audio_play_sound(sndMenuSelect,9,false);
        if currentArea == "main" &amp;&amp; frameWait &gt; 2 
        {
            global.inMenu = false;
        }
        currentArea = "main";
        if global.menuChoice &gt; 3 global.menuChoice = 3;
    }
}

else
{
    global.menuChoice = 1;
}
// Menu Specific Stuff
if global.inMenu == true
{
    frameWait += 1;
}
else
{
    frameWait = 0;
}

if objPlayer.didTeleport == true &amp;&amp; !global.isShifting
{
    if (keyboard_check_released(vk_space)) or gamepad_button_check_released(0,gp_start)
    {
    
        if global.inMenu == true &amp;&amp; frameWait &gt; 2
        {
            global.inMenu = false;
        }
        else
        {
            global.inMenu = true;
        }
        audio_play_sound(sndMenuToggle,8,false);
    }
}


// Has to be at end for flow reasons
visible = global.inMenu;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.Font);
draw_set_halign(fa_left);
draw_set_color(c_white);

draw_sprite(sprPauseMenuBackdrop,image_index,view_xview[0],view_yview[0]);
draw_sprite(sprPauseMenuTop,image_index,view_xview[0]+64,view_yview[0]);
draw_text(view_xview[0]+84, view_yview[0]+6,"SYSTEM.MENU");


if currentArea == "main"
{
    if global.menuChoice == 1 draw_sprite(sprPauseButton,image_index,view_xview[0],view_yview[0]+48); else draw_sprite(sprPauseButtonIdle,image_index,view_xview[0],view_yview[0]+48);
    if global.menuChoice == 2 draw_sprite(sprPauseButton,image_index,view_xview[0],view_yview[0]+72); else draw_sprite(sprPauseButtonIdle,image_index,view_xview[0],view_yview[0]+72);
    if global.menuChoice == 3 draw_sprite(sprPauseButton,image_index,view_xview[0],view_yview[0]+96); else draw_sprite(sprPauseButtonIdle,image_index,view_xview[0],view_yview[0]+96);
    
    draw_text(view_xview[0]+4,view_yview[0]+53,"WEAPONS");
    draw_text(view_xview[0]+4,view_yview[0]+77,"ITEMS");
    draw_text(view_xview[0]+4,view_yview[0]+101,"SETTINGS");
    
    /*// Player + Lives
    draw_sprite(sprPlayer,0,view_xview[0] + 24, view_yview[0] + 28);
    draw_text(view_xview[0] + 40, view_yview[0] + 28, string(global.playerLives));*/
}

else
{
    if global.menuChoice == 1 or global.menuChoice == 2 or global.menuChoice == 3 
    {
        if currentSide == "left"
        {
            draw_sprite(sprPauseButton,image_index,view_xview[0],view_yview[0]+48); 
        }
        else 
        {
            draw_sprite(sprPauseButtonIdle,image_index,view_xview[0],view_yview[0]+48)
        }
    draw_text(view_xview[0]+4,view_yview[0]+53,"BACK");
    }
}

// Drawing weapon energy
if currentArea == "weapons"
{
    draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+37);
    
    for (i = 1; i &lt;= global.playerHP; i += 1)
    {
        draw_sprite(sprWeaponIcon, 0, view_xview[0] +116, view_yview[0] + 28)
        draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+38, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
        draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+38, image_xscale,image_yscale,image_angle,c_white,image_alpha);
    }
    
    draw_text(view_xview[0] + 144, view_yview[0] + 28, "BUSTER");
    
    if !global.weplocked1
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+57);
        
        for (i = 1; i &lt;= global.wpe_weapon1; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 48)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+58, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+58, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 48, "VWS 01");
    }

    if !global.weplocked2
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+77);
        
        for (i = 1; i &lt;= global.wpe_weapon2; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 68)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+78, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+78, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 68, "VWS 02");
    }
    
    if !global.weplocked3
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+97);
        
        for (i = 1; i &lt;= global.wpe_weapon3; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 88)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+98, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+98, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 88, "VWS 03");
    }

    if !global.weplocked4
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+117);
        
        for (i = 1; i &lt;= global.wpe_weapon4; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 108)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+118, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+118, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 108, "VWS 04");
    }

    if !global.weplocked5
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+137);
        
        for (i = 1; i &lt;= global.wpe_weapon5; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 128)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+138, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+138, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 128, "VWS 05");
    }

    if !global.weplocked6
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+157);
        
        for (i = 1; i &lt;= global.wpe_weapon6; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 148)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+158, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+158, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 148, "VWS 06");
    }
    
    if !global.weplocked7
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+177);
        
        for (i = 1; i &lt;= global.wpe_weapon7; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 168)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+178, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+178, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 168, "VWS 07");
    }

    if !global.weplocked8
    {
        draw_sprite(sprEnergyPauseEmpty,0,view_xview[0]+144,view_yview[0]+197);
        
        for (i = 1; i &lt;= global.wpe_weapon8; i += 1)
        {
            draw_sprite(sprWeaponIcon, 0, view_xview[0] + 116, view_yview[0] + 188)
            draw_sprite_ext(sprEnergyPausePrimary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+198, image_xscale,image_yscale,image_angle,make_color_rgb(252, 228, 160),image_alpha);
            draw_sprite_ext(sprEnergyPauseSecondary,0,view_xview[0]+87+(sprite_get_width(sprEnergyPauseEmpty)+i*2),view_yview[0]+198, image_xscale,image_yscale,image_angle,c_white,image_alpha);
        }
        
        draw_text(view_xview[0] + 144, view_yview[0] + 188, "VWS 08");
    }

}

// Drawing weapon energy
if currentArea == "utility"
{
    draw_sprite(sprETank,0,view_xview[0]+144,view_yview[0]+37);
    draw_text(view_xview[0]+176,view_yview[0]+42,"0");
    draw_sprite(sprETank,0,view_xview[0]+144,view_yview[0]+53);
    draw_text(view_xview[0]+176,view_yview[0]+53,"0");
}

// Drawing arrow
if drawArrow
{
    draw_sprite(sprMenuArrow,0,view_xview[0] + arrowX, view_yview[0] + arrowY);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
