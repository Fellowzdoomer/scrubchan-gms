<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprOctoBattery</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

image_speed = 0;
image_index = 0;

enemyHP = 12;
dir = "right"; // left, right, up, down

maxTime = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if isActive
{
enemyTimer += 1;
if enemyTimer &gt;= maxTime
{
    // down
    if dir == "down"
    {
        if enemyTimer == maxTime
        {
            vsp = 2;
            image_index = 1;
        }
        else if enemyTimer == maxTime + 2
        {
            image_index = 2;
        }
        else if enemyTimer == maxTime + 5
        {
            if instance_place(x,y+sign(vsp),objSolid)
            {
                vsp = 0;
            }
            else
            {
                enemyTimer = maxTime + 4
            }
        }
        else if enemyTimer == maxTime + 50
        {
            dir = "up";
            enemyTimer = 0;
        }
    }
    
    // up
    if dir == "up"
    {
        if enemyTimer == maxTime
        {
            vsp = -2;
            image_index = 1;
        }
        else if enemyTimer == maxTime + 2
        {
            image_index = 2;
        }
        else if enemyTimer == maxTime + 5
        {
            if instance_place(x,y+sign(vsp),objSolid)
            {
                vsp = 0;
            }
            else
            {
                enemyTimer = maxTime + 4
            }
        }
        else if enemyTimer == maxTime + 50
        {
            dir = "down";
            enemyTimer = 0;
        }
    }
    
    // left
    if dir == "left"
    {
        if enemyTimer == maxTime
        {
            hsp = -2;
            image_index = 1;
        }
        else if enemyTimer == maxTime + 2
        {
            image_index = 2;
        }
        else if enemyTimer == maxTime + 5
        {
            if instance_place(x+sign(hsp),y,objSolid)
            {
                hsp = 0;
            }
            else
            {
                enemyTimer = maxTime + 4
            }
        }
        else if enemyTimer == maxTime + 50
        {
            dir = "right";
            enemyTimer = 0;
        }
    }
    
    // right
    if dir == "right"
    {
        if enemyTimer == maxTime
        {
            hsp = 2;
            image_index = 1;
        }
        else if enemyTimer == maxTime + 2
        {
            image_index = 2;
        }
        else if enemyTimer == maxTime + 5
        {
            if instance_place(x+sign(hsp),y,objSolid)
            {
                hsp = 0;
            }
            else
            {
                enemyTimer = maxTime + 4
            }
        }
        else if enemyTimer == maxTime + 50
        {
            dir = "left";
            enemyTimer = 0;
        }
    }
}

x += hsp;
y += vsp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
enemyHP = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
