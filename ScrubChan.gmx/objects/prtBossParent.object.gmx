<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prevX = x;
didDeathExplosion = false;
didIntroduction = false;
didDesperation = false;
got_tDest = false;
landed = false;
isHit = false;

enemyTimer2 = 0;
hitTimer = 5;

attack = 0;
global.bossHP = 0;
global.bossHP2 = 0;
global.bossHP3 = 0;
instance_create(0,0,objEnemyHPBar);
/*instance_create(0,0,objEnemyHPBar2);
instance_create(0,0,objEnemyHPBar3);*/

tDestX = 0;
tDestY = 0;

attack = 0;

// [Damage Values]]

dmg_BusterShot = 1;

/*
dmg_wep2
dmg_wep3
dmg_wep4
dmg_wep5
dmg_wep6
dmg_wep7
dmg_wep8
*/

isAlive = true;

enemyTimer = 0;

grav = 0.2;
jumpspeed = 4.64;
vsp = 0;
vsp_cap = 7;
hsp = 0;

facePlayer = true;
saveValue = 0;

// start

/*sprite_index = sprQuintTeleportIn;
image_speed = 0;
image_index = 0;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if facePlayer
{
    if x &gt; objPlayer.x { image_xscale = -1; }
    else { image_xscale = 1; }
}

if !didIntroduction
{
    with objPlayer 
    {
        lockInput = true;
        if didTeleport sprite_index = sprPlayer
    }
    if !got_tDest
    {
        tDestX = x;
        tDestY = y;
        y -= 256
        got_tDest = true;
    }
    
    if !landed 
    {
        if (!place_meeting(x,y-4,objSolid))
        {
            sprite_index = sprQuintTeleportIn;
            image_speed = 0;
            y += 4;
        }
        else { sprite_index = sprQuintIdle; landed = true; }
    }
    else
    {
        //image_speed = 0;
        enemyTimer += 1;
        if enemyTimer == 15
        {
            sprite_index = sprQuintPose;
            image_speed = 0;
            image_index = 0;
        }
        else if enemyTimer == 25 image_index = 1;
        else if enemyTimer == 30 image_index = 2;
        else if enemyTimer == 35 image_index = 3;
        else if enemyTimer == 40 image_index = 4;
        else if enemyTimer == 45 { sprite_index = sprQuintIdle; image_index = 0; }
        else if enemyTimer == 50
        {
            if global.bossHP &lt; 28 
            {
                global.bossHP += 1;
                global.bossHP2 += 1;
                global.bossHP3 += 1;
                audio_play_sound(sndRecoverHP,8,false)
                enemyTimer = 47;
            }
        }
        else if enemyTimer == 55
        {
            enemyTimer = 0;
            didIntroduction = true;
            with objPlayer lockInput = false;
        }
    }
}
else
{
if global.bossHP &lt;= 0 
{
    if !didDeathExplosion
    {
        audio_stop_all();
        instance_create(x,y,objExplosionSpawner)
        if instance_exists(objHitByMelee) with objHitByMelee instance_destroy();
        enemyTimer = 0;
        didDeathExplosion = true;
    }
    isAlive = false;
    visible = false;
    
    /*if enemyTimer == 1
    {
        if instance_exists(objEnemyHPBar) with objEnemyHPBar instance_destroy();
        enemyTimer = 0;
    }*/
    
    if instance_exists(objTeleportMarker)
    {
        with objTeleportMarker
        {
            if bossAlive == "quint" instance_destroy()
        }
    }
    
    if room != rmTestingChamber
    {
        enemyTimer += 1;
        if enemyTimer == 180
        {
            with objPlayer lockInput = true; sprite_index=sprPlayer;
            audio_play_sound(bgmVictory,0,false);
        }
        else if enemyTimer == 480 room_goto(arbitraryC0ode);
    }
    else
    {
        if enemyTimer == 0
        {
            instance_create(x,y,objBigHealth);
            enemyTimer = 1;
        }
    }
}

// Actual attacks
if isAlive == true &amp; !global.inMenu
{
    prevX = x;
    if enemyTimer &lt; 30 enemyTimer = 30
    enemyTimer += 1;
    //show_debug_message(string(enemyTimer))
        if enemyTimer == 50
        {
            if global.bossHP &gt; 9
            {
                attack = irandom_range(1,4);
            }
            else
            {
                if didDesperation == false attack = 5;
                else attack = irandom_range(1,5);
            }
        }

        if (place_meeting(x,y,objBusterShot))
        {
            with objBusterShot.id { audio_play_sound(sndEnemyHit, 9, false); instance_destroy(); }
            
            if global.bossHP3 &gt; 0 global.bossHP3 -= dmg_BusterShot;
            else if global.bossHP2 &gt; 0 global.bossHP2 -= dmg_BusterShot;
            else global.bossHP -= dmg_BusterShot;
            
            if !isHit isHit = true;
        }
        
        if isHit
    {
        enemyTimer2 += 1;
        if enemyTimer2 &gt;= hitTimer
        {
            enemyTimer2 = 0;
            isHit = false;
        }
    }
    }

}

// Because I can't define attacks in a better way.

if !global.inMenu and isAlive
{
    switch attack
    {
        case 1: b_quintCharge(); break;
        case 2: b_quintRush(); break;
        case 3: b_quintMelee(); break;
        case 4: b_quintNormalShots(); break;
        case 5: b_quintDesperate(); break;
    }
}

if global.inMenu
{
    x = prevX;
}

x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isHit
{
    shader_set(shd_WhiteSprite);
    draw_self();
    shader_reset();
}
else
{
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
