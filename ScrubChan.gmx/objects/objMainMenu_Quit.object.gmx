<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>prtOverlayMenu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(sndMenuSelect, 9, false);
timer = 0;
startTimer = false;
mainMenuChoice = 1;

flavorText = "";
arrowX = 80;
arrowY = 92;

_random = irandom_range(1,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set up the keybinds
kConfirm = keyboard_check_released(ord("X"));
kGoBack = keyboard_check_released(ord("Z"));
kUp = keyboard_check_released(vk_up);
kDown = keyboard_check_released(vk_down);
kLeft = keyboard_check_released(vk_left);
kRight = keyboard_check_released(vk_right);
    
kConfirmGP = gamepad_button_check_released(0,gp_face1)
kGoBackGP = gamepad_button_check_released(0,gp_face2)
kUpGP = gamepad_button_check_released(0,gp_padu)
kDownGP = gamepad_button_check_released(0,gp_padd)
kLeftGP = gamepad_button_check_released(0,gp_padl)
kRightGP = gamepad_button_check_released(0,gp_padr)
    
switch _random
{
    case 1: flavorText = "ARE YOU SURE YOU##WANT TO LEAVE?"; break;
    case 2: flavorText = "BUT WHAT ABOUT##THE BAD GUYS??"; break;
    case 3: flavorText = "FUN IS INFINITE##WITH MAJIN!!"; break;
    case 4: flavorText = "BE SURE TO##SCRUBSCRIBE!"; break;
    case 5: flavorText = "IS IT TIME##TO CATCH A CHEATERS?"; break;
    case 6: flavorText = "ONE MORE STAGE##PLEASEEEEE???"; break;
    case 7: flavorText = "GET EQUIPPED WITH##RAGE QUIT!"; break;
    case 8: flavorText = "HONESTLY MEGA MAN 2##IS OVERRATED"; break;
    case 9: flavorText = "I GUESS THIS IS##WHERE WE PART FOR NOW?"; break;
    case 10: flavorText = "SEE YOU NEXT TIME!!"; break;
    default: flavorText = "TOO LAZY TO##ADD MORE STUFF"; break;
}

if gamepad_is_connected(0)
{
    if kConfirmGP kConfirm = 1;
    if kGoBackGP kGoBack = 1;
    if kUpGP kUp = 1;
    if kDownGP kDown = 1;
    if kLeftGP kLeft = 1;
    if kRightGP kRight = 1;
}

if (!startTimer)
{
    if kUp || kDown || kLeft || kRight
    {
    audio_play_sound(sndMenuNavigate, 9, false);
    }
    
    if kUp
    {
        if mainMenuChoice == 1 mainMenuChoice = 2;
        else mainMenuChoice -= 1;
    }    
    
    if kDown
    {
        if mainMenuChoice == 2 mainMenuChoice = 1;
        else mainMenuChoice += 1;
    }
        
    if kGoBack
    {
        audio_play_sound(sndMenuSelect, 9, false);
        with self.id instance_destroy();
    }
    
    if kConfirm
    {
        switch mainMenuChoice
        {
            case 1: game_end();
            case 2: with self.id instance_destroy();
        }
        
        audio_stop_all();
        audio_play_sound(sndTeleportOut,9,false);
    }
}


// arrow stuff

if mainMenuChoice == 1 arrowY = 116;
else if mainMenuChoice == 2 arrowY = 128;

arrowX = 80;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Main Menu Script

draw_sprite(sprPauseMenuBackdrop, 0, 0, 0);
draw_set_font(global.Font);
draw_set_halign(fa_center);
draw_set_color(c_white);

draw_sprite(sprQuitBox, 0, view_xview[0], view_yview[0] + 48);

draw_text(view_xview[0]+128, view_yview[0] + 64, flavorText);

draw_text(view_xview[0]+128, view_yview[0] + 116, "QUIT");
draw_text(view_xview[0]+128, view_yview[0] + 128, "GO BACK");


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
