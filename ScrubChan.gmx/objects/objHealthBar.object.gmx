<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.playerWepEnergy = 28;
weaponEnergy = global.playerWepEnergy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch room
{
    case rmDebugMenu:
    case rmMainMenu:
    case rmStageSelect:
         with self.id instance_destroy();
}
{
switch global.weapon
{
    case 1:
         weaponEnergy = global.wpe_weapon1;
         break;
    case 2:
         weaponEnergy = global.wpe_weapon2;
         break;
    case 3:
         weaponEnergy = global.wpe_weapon3;
         break;
    case 4:
         weaponEnergy = global.wpe_weapon4;
         break;
    case 5:
         weaponEnergy = global.wpe_weapon5;
         break;
    case 6:
         weaponEnergy = global.wpe_weapon6;
         break;
    case 7:
         weaponEnergy = global.wpe_weapon7;
         break;
    case 8:
         weaponEnergy = global.wpe_weapon8;
         break;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !global.inMenu
{
// Health bar (thanks MegaEngine)
draw_sprite(sprHealthBarEmpty,0,view_xview[0]+7+8+5,view_yview[0]+17);

for(i = 1; i &lt;= global.playerHP; i += 1)
{
    draw_sprite_ext(sprEnergyPrimary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(252, 228, 160), 1);
    draw_sprite_ext(sprEnergySecondary, 0, view_xview[0]+7+8+1+5, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(248, 248, 248), 1);
}

if global.weapon &gt; 0
{
draw_sprite(sprHealthBarEmpty,0,view_xview[0]+7+8+5+16,view_yview[0]+17);

for(i = 1; i &lt;= weaponEnergy; i += 1)
{
    draw_sprite_ext(sprEnergyPrimary, 0, view_xview[0]+7+8+1+5+16, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(252, 228, 160), 1);
    draw_sprite_ext(sprEnergySecondary, 0, view_xview[0]+7+8+1+5+16, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(248, 248, 248), 1);
}
}

// Toxin bar
if (instance_exists(objPoison))
{
draw_sprite(sprHealthBarEmpty,0,view_xview[0]+7+5,view_yview[0]+17);

for(i = 1; i &lt;= global.toxinAmt i += 1)
{
    draw_sprite_ext(sprEnergyPrimary, 0, view_xview[0]+7+1+5, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(0, 200, 0), 1);
    draw_sprite_ext(sprEnergySecondary, 0, view_xview[0]+7+1+5, view_yview[0]+17+(sprite_get_height(sprHealthBarEmpty)-i*2), 1, 1, 0, make_color_rgb(0, 255, 0), 1);
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
