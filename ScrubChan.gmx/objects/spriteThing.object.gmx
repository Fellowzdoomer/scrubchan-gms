<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprQuintIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_pose = 1
_spd = 0
image_speed = 0;

_1 = sprQuintIdle
_2 = sprQuintPose
_3 = sprQuintCharge
_4 = sprQuintWhipShot
_5 = sprQuintKick
_6 = sprQuintHyperSlide
_7 = sprQuintSlash
_8 = sprQuintJump
_9 = sprQuintCallSaku
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = keyboard_check_released(ord("A"))
kRight = keyboard_check_released(ord("D"))
kDebug = keyboard_check_released(ord("Q"))

kSpeedUp = keyboard_check_released(ord("W"))
kSpeedDown = keyboard_check_released(ord("S"))

kOffsetUp = keyboard_check_released(vk_up)
kOffsetDown = keyboard_check_released(vk_down)
kOffsetLeft = keyboard_check_released(vk_left)
kOffsetRight = keyboard_check_released(vk_right)

if kSpeedUp image_index += 1;
if kSpeedDown image_index -= 1;

image_speed = (_spd) / 60;

if kLeft sprite_pose -= 1;
else if kRight sprite_pose += 1;
if kDebug
{
    show_debug_message("xoffset = " + string(sprite_get_xoffset(sprite_index)))
    show_debug_message("yoffset = " + string(sprite_get_yoffset(sprite_index)))
    show_debug_message("imagespeed = " + string(image_speed));
    show_debug_message("imageindex = " + string(image_index));
}
if kOffsetUp
{
    sprite_set_offset(sprite_index,sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index)+1)
}
if kOffsetDown
{
    sprite_set_offset(sprite_index,sprite_get_xoffset(sprite_index),sprite_get_yoffset(sprite_index)-1)
}
if kOffsetLeft
{
    sprite_set_offset(sprite_index,sprite_get_xoffset(sprite_index)+1,sprite_get_yoffset(sprite_index))
}
if kOffsetRight
{
    sprite_set_offset(sprite_index,sprite_get_xoffset(sprite_index)-1,sprite_get_yoffset(sprite_index))
}

if sprite_pose == 1 sprite_index = _1;
if sprite_pose == 2 sprite_index = _2;
if sprite_pose == 3 sprite_index = _3;
if sprite_pose == 4 sprite_index = _4;
if sprite_pose == 5 sprite_index = _5;
if sprite_pose == 6 sprite_index = _6;
if sprite_pose == 7 sprite_index = _7;
if sprite_pose == 8 sprite_index = _8;
if sprite_pose == 9 sprite_index = _9;
if sprite_pose == 10 sprite_index = _10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
