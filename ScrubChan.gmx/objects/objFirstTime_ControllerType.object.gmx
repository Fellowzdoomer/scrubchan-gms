<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;
timerMax = 10;
continueTimer = 0;
continueTimerMax = 150;
continueTimerFadeMax = 10;
continueTimerFade = 0;
showContinue = false;
continueAlphaVal = 0;
allowPress = false;
alphaVal = 0;

controllerTypeInt = 1;
controllerType = "keyboard";
controllerDesc = "ASDF";

/*
1 - keyboard
2 - playstation
3 - xbox
4 - wiimote
5 - joycons
6 - switch pro controller
7 - other
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kLeft = keyboard_check_released(vk_left);
kRight = keyboard_check_released(vk_right);
kConfirm = keyboard_check_released(ord("X"));

if (kLeft || kRight) audio_play_sound(sndMenuNavigate, 9, false);

if kLeft
{
    if controllerTypeInt == 1 controllerTypeInt = 7;
    else controllerTypeInt -= 1;
}

if kRight
{
    if controllerTypeInt == 7 controllerTypeInt = 1;
    else controllerTypeInt += 1;
}

timer += 1;
if timer == timerMax
{
    if alphaVal == 0 alphaVal = 0.25;
    else if alphaVal == 0.25 alphaVal = 0.50;
    else if alphaVal == 0.50 alphaVal = 0.75;
    else if alphaVal == 0.75 alphaVal = 1;
    timer = 0;
}

if alphaVal == 1 
{
    timer = 0;
    continueTimer += 1;
    if continueTimer &gt;= continueTimerMax
    {
        continueTimerFade += 1;
        showContinue = true;
    }
}

if showContinue
{
    if continueTimerFade == continueTimerFadeMax
    {
        if continueAlphaVal == 0 continueAlphaVal = 0.25;
        else if continueAlphaVal == 0.25 continueAlphaVal = 0.5;
        else if continueAlphaVal == 0.5 continueAlphaVal = 0.75;
        else if continueAlphaVal == 0.75 continueAlphaVal = 1;
        else if continueAlphaVal == 1 allowPress = true;
        continueTimerFade = 0;
    }
}

if allowPress
{
    if (kConfirm)
        {
            ini_open("settings.ini");
            ini_write_real("ControlSettings","controllerType",controllerTypeInt);
            ini_close();
            audio_play_sound(sndMenuSelect, 9, false);
            instance_create(x,y,objFirstTime_ScreenSize);
            with self.id instance_destroy();
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(global.Font);
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_alpha(alphaVal);

draw_text(room_width/2,room_height/2-96,
"THIS GAME SUPPORTS MULTIPLE#
TYPES OF CONTROLLERS.#
#
PLEASE SELECT YOUR DEFAULT#
CONTROL TYPE WITH YOUR#
KEYBOARDS LEFT AND RIGHT#
ARROW KEYS.");


switch controllerTypeInt
{
    case 1: 
        controllerType = "keyboard";
        controllerDesc = "";
        draw_set_color(c_white);
    break;
    case 2: 
        controllerType = "playstation"; 
    break;
    case 3: 
        controllerType = "xbox";
        controllerDesc = "";
    break;
    case 4: 
        controllerType = "wiimote"; 
        controllerDesc = "HOLD WIIMOTE HORIZONTALLY";
        draw_set_color(c_red);
        draw_text(room_width/2,(room_height/2)+32,string_upper(controllerDesc));
    break;
    case 5: 
        controllerType = "joycons"; 
        controllerDesc = "CONNECT BOTH L AND R##AS ONE PLAYER!";
        draw_set_color(c_red);
        draw_text(room_width/2,(room_height/2)+32,string_upper(controllerDesc));
    break;
    case 6: 
        controllerType = "switch pro controller"; 
        controllerDesc = "";
    break;
    case 7: 
        controllerType = "other"; 
        controllerDesc = "BE SURE TO CALIBRATE##YOUR CONTROLS!";
        draw_set_color(c_red);
        draw_text(room_width/2,(room_height/2)+32,string_upper(controllerDesc));
    break;
}

draw_text(room_width/2,(room_height/2)+32,string_upper(controllerDesc));
draw_set_color(c_white);
draw_text(room_width/2,(room_height/2)+16,string_upper(controllerType));

if (showContinue)
{
    draw_set_alpha(continueAlphaVal)
    draw_text(room_width/2,(room_height/2)+80, "PRESS X WHEN DONE")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
