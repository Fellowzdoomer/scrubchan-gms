<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// General create code

global.inMenu = false;
global.underwater = false;
global.toxinAmt = 0;
instance_create(0,0,objPlayerHitboxMarker);
toxinTimer = 0;

freeformMode = false;
screenCount = 0;

prevY = y;

// Important variables
hsp = 0;
vsp = 0;

hsp_carry = 0;
vsp_carry = 0;

movespeed = 1.5;
jumpspeed = 5;
slidespeed = 2;
grav = 0.25;

invulnerable = false;
isSliding = false;
isShooting = false;
isGrounded = false;
isClimbing = false;

global.shiftDir = "right";
global.shiftGoal = 32;
global.shiftCur = 0;
global.isShifting = false;
camIsMoving = false; 
shiftTimer = 0;

shootTimer = 0;
slideTimer = 0;
invulnTimer = 0;

readyTextShow = false;
readyTimer = 0;
got_tDest = false;
didTeleport = false;

push = 0;
landTimer = 0;

vsp_cap = 10;
low_grav = false;

knockbackSpeed = 1;
knockbackTimer = 0;
knockbackTimerMax = 20;
isKnockedBack = false;

instance_create(0,0,objPauseMenu);
instance_create(x,y,objHealthBar)

lockInput = false;
deathTimer = 0;

// spawning

if global.checkpointX == noone tdestX = 0; else 
{
    tdestX = global.checkpointX;
    x = global.checkpointX;
}
if global.checkpointY == noone tdestY = 0; else
{
    tdestY = global.checkpointY;
    y = global.checkpointY - 16;
}


h_move = gamepad_axis_value(0,gp_axislh);
v_move = gamepad_axis_value(0,gp_axislv);
move = 0;

kUp = 0;
kDown = 0;
kLeft = 0;
kRight = 0;
kJump = 0;
kJumpHold = 0;

rh_move = gamepad_axis_value(0,gp_axisrh);
rv_move = gamepad_axis_value(0,gp_axisrv);

// limbo womans weapon variables
global.playerDidLimboDm = false; // this attack should only be doable once
global.limboComboCount = 0; // DM counter
global.limboCount = 0;
global.enemyRevengeCounter = 8; // how many hits from a melee weapon before retaliating

// surge womans weapon variables
isDashing = false;
dashTimer = 0;

// place tiles
placeTileObjects();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Abilities list

// Basic actions
canJump = true;  // Your basic jump ability.
canSlide = true; // Your basic slide ability.
canShoot = true; // Your basic shoot ability.
canWalk = true; // You can move around normally.

// Weapon specific
canRebirth = true; // Activates a special attack with Limbo Saber when hit with one HP.
                   // can only be activated once and does not apply to hazards.

// Ability specific
ab_airslide = true; // You can slide in midair.
ab_hptowep = true; // Extra health from pickups is converted to your current weapon's energy.
ab_weptohp = true; // Extra energy from weapon pickups is converted to HP.
ab_energyconverter = true; // Extra energy from weapon pickups is converted to your
                            // lowest weapon's energy.

ab_spikeguard = true; // Protect you from spikes. Can only be activated once.
ab_pitguard = true; // Teleport you to the nearest on-screen platform.
                     // Can only be activated once.

ab_halfdamage = true; // Halve all damage taken, or reduce to one when applicable.
ab_powergear = true; // Your attacks will get stronger for a period of time.
ab_speedgear = true; // Time around you will slow for a period of time.

ab_rci = true; // You will be able to react to various hazards in real time.

// Stackable
stk_extendslide = true; // Extends your slide by 1/4. Stack to increase the effect.
stk_extendslide_int = 1; // Max 3
stk_boostslide = true; // Increases the speed of your slide. Stack to increase the effect.
stk_boostslide_int = 1; // Max 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Limbo counter resetter

global.limboCount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// General Step Code (calls other scripts)

if keyboard_check_released(ord("1")) global.weplocked1 = false;
if keyboard_check_released(ord("2")) global.weplocked2 = false;
if keyboard_check_released(ord("3")) global.weplocked3 = false;
if keyboard_check_released(ord("4")) global.weplocked4 = false;
if keyboard_check_released(ord("5")) global.weplocked5 = false;
if keyboard_check_released(ord("6")) global.weplocked6 = false;
if keyboard_check_released(ord("7")) global.weplocked7 = false;
if keyboard_check_released(ord("8")) global.weplocked8 = false;
if keyboard_check_released(ord("9")) show_debug_message(string(view_yview[0]) + " y view pos");
    
h_move = gamepad_axis_value(0,gp_axislh);
v_move = gamepad_axis_value(0,gp_axislv);

rh_move = gamepad_axis_value(0,gp_axisrh);
rv_move = gamepad_axis_value(0,gp_axisrv);

if rh_move &gt; 0.2 or rh_move &lt; -0.2 or rv_move &gt; 0.2 or rv_move &lt; -0.2
{
    if !instance_exists(objWeaponSelectRThumb) instance_create(x,y,objWeaponSelectRThumb);
}

if (!didTeleport) { 
    playerTeleportInitial(); }
else
{
    {
        if !global.isShifting
        {
            if !low_grav grav = 0.25;
            else grav = 0.05;
            alarm[0] = 1;
            if !lockInput
            {
                if (global.inMenu == false) &amp; (global.playerHP &gt; 0)
                {
                    playerCheckGround();
                    playerCollision();
                    playerStep();
                    playerTeleportStep();   
                    playerCamera();
                    playerAnimation();
                    playerHealth();
                   
                }
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
