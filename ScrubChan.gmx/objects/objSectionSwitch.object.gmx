<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;

SCREEN_HORZ_GOAL = 256;
if room != stgMetalMan SCREEN_VERT_GOAL = 224;
else SCREEN_VERT_GOAL = 240;
show_debug_message(string(SCREEN_VERT_GOAL) + " screen vert");
PLAYER_GOAL = 32;
PLAYER_VERT_GOAL = 48;

screenCur = 0;
playerCur = 0;

doorTimer = 0; // for boss doors
nearestDoor = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var player = objPlayer;
// right
if (global.shiftDir == "right")
{
    if screenCur &lt; SCREEN_HORZ_GOAL
    {
        view_xview[0] += 4;
        screenCur += 4;
    }
    else
    {
        global.isShifting = false;
        with self instance_destroy();
    }
    
    if playerCur &lt; PLAYER_GOAL
    {
        objPlayer.x += 0.5;
        playerCur += 0.5;
    }
}

// left
if (global.shiftDir == "left")
{
    if screenCur &lt; SCREEN_HORZ_GOAL
    {
        view_xview[0] -= 4;
        screenCur += 4;
    }
    else
    {
        global.isShifting = false;
        with self instance_destroy();
    }
    
    if playerCur &lt; PLAYER_GOAL
    {
        objPlayer.x -= 0.5;
        playerCur += 0.5;
    }
}

// up

if (global.shiftDir == "up")
{
    if screenCur &lt; SCREEN_VERT_GOAL
    {
        view_yview[0] -= 2;
        screenCur += 2;
    }
    else
    {
        global.isShifting = false;
        with self instance_destroy();
    }
    
    if playerCur &lt; PLAYER_VERT_GOAL
    {
        objPlayer.y -= 0.5;
        playerCur += 0.5;
    }
}

// down

if (global.shiftDir == "down")
{
    if screenCur &lt; SCREEN_VERT_GOAL
    {
        view_yview[0] += 2;
        screenCur += 2;
    }
    else
    {
        global.isShifting = false;
        objPlayer.vsp = objPlayer.vsp / 2;
        with self instance_destroy();
    }
    
    if playerCur &lt; PLAYER_VERT_GOAL
    {
        objPlayer.y += 0.5;
        playerCur += 0.5;
    }
}

// boss door-right
if instance_exists(objBossDoor)
{
    with objPlayer
    {
        if instance_exists(objSectionSwitch) objSectionSwitch.nearestDoor = instance_nearest(x,y,objBossDoor);
    }
}

if (global.shiftDir == "right-door")
{
    
    if !nearestDoor.activated
    {
        nearestDoor.activated = true;
        doorTimer = 0;
    }
    
    else if nearestDoor.activated doorTimer += 1;
    
    // opening
    if doorTimer == 7
    {
        switch nearestDoor.image_index
        {
            case 0:
            audio_play_sound(sndDoor,9,false);
            nearestDoor.image_index = 1;
            doorTimer = 0;
            break;
            
            case 1:
            nearestDoor.image_index = 2;
            doorTimer = 0;
            break;
            
            case 2:
            nearestDoor.image_index = 3;
            doorTimer = 0;
            break;
            
            case 3:
            nearestDoor.image_index = 4;
            doorTimer = 8;
            break;
            
            case 5:
            audio_play_sound(sndDoor,9,false);
            nearestDoor.image_index = 6;
            doorTimer = 0;
            break;
            
            case 6:
            nearestDoor.image_index = 7;
            doorTimer = 0;
            break;
            
            case 7:
            nearestDoor.image_index = 8;
            doorTimer = 0;
            break;
            
            case 8:
            nearestDoor.image_index = 8;
            global.isShifting = false;
            audio_stop_all();
            audio_play_sound(bgmBossTheme, 9, true);
                if nearestDoor.spawnBoss == "surge" instance_create(view_xview[0]+192, view_yview[0]+192, objSurgeWoman);
            with self instance_destroy();
            break;
        }
    }
    
    else if doorTimer &gt; 8
    {
        if screenCur &lt; SCREEN_HORZ_GOAL
        {
            view_xview[0] += 4;
            screenCur += 4;
            //doorTimer = 9;
        }
        else
        {
            nearestDoor.image_index = 5;
            doorTimer = 0;
            //nearestDoor.activated = false;
            /*global.isShifting = false;
            with self instance_destroy();*/
        }
        if playerCur &lt; PLAYER_GOAL
        {
            objPlayer.x += .8;
            playerCur += 0.5;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
